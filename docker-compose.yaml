services:
  client:
    build: ./client
    container_name: client_frontend
    ports:
      - '3000:3000'
    volumes:
      - ./client:/app
      - /app/node_modules
    stdin_open: true
    tty: true
    depends_on:
      - server

  server:
    build: ./server
    container_name: server
    ports:
      - "8080:8080"
    volumes:
      - ./server:/app
      - /app/__pycache__ 
    stdin_open: true
    tty: true
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgresql://boris:031204@db:5432/mydb
      - FLASK_DEBUG=1  
      - FLASK_ENV=development

  db:
    image: postgres:15-alpine
    container_name: db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: "mydb"
      POSTGRES_USER: "boris"
      POSTGRES_PASSWORD: "031204"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U boris -d mydb"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  pgadmin_data: